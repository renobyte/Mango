package com.ls.manga.ui;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.widget.LinearLayout;

import com.ls.manga.R;
import com.mobclix.android.sdk.MobclixAdView;

public class MangoAdWrapperView extends LinearLayout
{
	Bitmap        mCloseButton;
	Paint         mPaint  = new Paint();
	Matrix        mMatrix = new Matrix();

	MobclixAdView mAdView;

	public MangoAdWrapperView(Context context)
	{
		super(context);
	}

	public MangoAdWrapperView(Context context, AttributeSet attrs)
	{
		super(context, attrs);
		mCloseButton = BitmapFactory.decodeResource(context.getResources(), R.drawable.toast_close);
		mMatrix.setScale(0.70f, 0.70f);
		mPaint.setColor(0xffff0000);
		mPaint.setAlpha(200);
	}

	public void setAdHitbox(MobclixAdView m)
	{
		mAdView = m;
	}

	@Override
	public void dispatchDraw(Canvas c)
	{
		// PocketManga.Log("drawing " + this.getHeight());
		// c.save();
		// c.rotate(270, 1, 1);
		// c.translate(-480, 0);
		super.dispatchDraw(c);
		if (mAdView == null)
			return;
		Matrix m = new Matrix();
		m.setScale(0.60f, 0.60f);
		m.postTranslate(mAdView.getLeft() + 0.2f, 0.2f);
		c.drawBitmap(mCloseButton, m, mPaint);
		// c.drawRect(new Rect(mAdView.getLeft(), mAdView.getTop(), mAdView.getLeft() + (int) (mCloseButton.getWidth() *
		// 0.7), mAdView.getTop() + mCloseButton.getHeight()), mPaint);
		// c.restore();
	}

	@Override
	public boolean dispatchTouchEvent(MotionEvent ev)
	{
		if (ev.getAction() == MotionEvent.ACTION_UP  || ev.getAction() == MotionEvent.ACTION_DOWN)
		{
			int x = (int) ev.getX();
			int y = (int) ev.getY();
			if (x >= mAdView.getLeft() && x <= mAdView.getLeft() + (mCloseButton.getWidth() * 0.7))
				if (y >= mAdView.getTop() && y <= mAdView.getTop() + mCloseButton.getHeight() * 0.7)
				{
					this.performClick();
					return true;
				}
		}

		return super.dispatchTouchEvent(ev);
	}

}
