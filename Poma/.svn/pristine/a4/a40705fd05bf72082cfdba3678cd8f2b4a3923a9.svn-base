package com.ls.manga.activities;

import java.io.File;
import java.util.HashMap;

import com.flurry.android.FlurryAgent;

import com.ls.manga.PocketManga;
import com.ls.manga.PomaHttp;
import com.ls.manga.R;
import android.os.Bundle;
import android.os.Environment;
import android.preference.CheckBoxPreference;
import android.preference.EditTextPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;
import android.preference.Preference.OnPreferenceChangeListener;
import android.widget.Toast;

public class PreferencesActivity extends PreferenceActivity
{
	private EditTextPreference mDataFolderLoc;
	private CheckBoxPreference mOverrideDataFolder;

	private String       mDefaultMsg;

	@Override
	public void onStop()
	{
		if (PocketManga.getSharedPreferences().getBoolean("analyticsEnabled", false) && PomaHttp.checkConnectivity(getApplicationContext()))
		{
			FlurryAgent.onStartSession(this, "AD7A4MA54PHHGYQN8TWW");
			HashMap<String, String> parameters = new HashMap<String, String>();
			parameters.put("ReduceMomentum", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("reducedMomentum", false)));
			parameters.put("LTRReading", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("leftRightReading", false)));
			parameters.put("StickyZoom", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("stickyZoom", false)));
			parameters.put("DisableTap", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("disableTapToAdvance", false)));
			parameters.put("DisableSwipe", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("disableSwipeControls", false)));
			parameters.put("Preloading", PocketManga.getSharedPreferences().getString("preloaders", "3"));
			parameters.put("ReverseChapters", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("reverseChapterList", false)));
			parameters.put("InvertedMenus", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("invertTheme", false)));
			parameters.put("DisableAnimations", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("disableAnimation", false)));
			parameters.put("DisableBackgrounds", Boolean.toString(PocketManga.getSharedPreferences().getBoolean("disableBackgrounds", false)));
			FlurryAgent.onEvent("Close Preferences", parameters);
			FlurryAgent.onEndSession(this);
		}
		super.onStop();
	}

	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		addPreferencesFromResource(R.xml.mangoprefs);
		setTitle("Preferences");

		mDataFolderLoc = (EditTextPreference) this.getPreferenceScreen().findPreference("customDataFolder");
		mOverrideDataFolder = (CheckBoxPreference) this.getPreferenceScreen().findPreference("useCustomDataFolder");
		
		mDefaultMsg = mDataFolderLoc.getSummary().toString();

		if (!PocketManga.getSharedPreferences().getBoolean("useCustomDataFolder", false))
			mDataFolderLoc.setEnabled(false);
		else
			mDataFolderLoc.setSummary(mDefaultMsg + "\nCurrent: " + PocketManga.getSharedPreferences().getString("customDataFolder", "~"));

		mOverrideDataFolder.setOnPreferenceChangeListener(new OnPreferenceChangeListener()
		{

			@Override
			public boolean onPreferenceChange(Preference preference, Object newValue)
			{
				boolean val = ((Boolean) newValue).booleanValue();

				mDataFolderLoc.setEnabled(val);

				if (!val)
					PocketManga.getSharedPreferences().edit().putString("customDataFolder", PocketManga.getPomaDataDirectory().getAbsolutePath()).commit();

				return true;
			}
		});

		mDataFolderLoc.setOnPreferenceChangeListener(new OnPreferenceChangeListener()
		{

			@Override
			public boolean onPreferenceChange(Preference preference, Object newValue)
			{
				String s = (String) newValue;
				s = s.trim();
				if (s.endsWith("/"))
					s = s.substring(0, s.length() - 1);
				if (s.toLowerCase().endsWith("/pocketmanga"))
					s = s.substring(0, s.length() - "/PocketManga".length());
				File f = new File(s + "/PocketManga");

				if (!f.exists())
				{
					try
					{
						if (!f.mkdir())
						{
							Toast.makeText(PreferencesActivity.this, "PocketManga wasn't able to create a folder at that location.  Select another.", Toast.LENGTH_LONG).show();
							return false;
						}
						if (!f.canWrite())
						{
							Toast.makeText(PreferencesActivity.this, "PocketManga cannot write to that location.  Select another.", Toast.LENGTH_LONG).show();
							return false;
						}
					}
					catch (Exception e)
					{
						Toast.makeText(PreferencesActivity.this, "PocketManga encountered an error attempting to write to that location.  Select another.", Toast.LENGTH_LONG).show();
						PocketManga.Log("onPreferenceChanged: " + e.toString());
						return false;
					}
				}
				
				PocketManga.alert("The data folder has been set to:\n\n" + f.getAbsolutePath() + "\n\nYou must manually move any existing data from the old PocketManga folder to the new one above.", "Important!", PreferencesActivity.this);
				mDataFolderLoc.setSummary(mDefaultMsg + "\nCurrent: " + PocketManga.getSharedPreferences().getString("customDataFolder", "~"));
				if (newValue.toString().equals(s))
					return true;
				else
					PocketManga.getSharedPreferences().edit().putString("customDataFolder", s.toString()).commit();
				return false;
			}
		});
	}
}
